#!/bin/bash
cat <<-'EOF' >/var/lib/coreos-vagrant/vagrantfile-user-data
#cloud-config
#
#   Author: Rohith
#   Date: 2015-06-04 13:14:14 +0100 (Thu, 04 Jun 2015)
#
#  vim:ts=2:sw=2:et
#
<%-
  cluster = @etcd_cluster.map { |name,ip| "#{name}=http://#{ip}:2380" }.join(',')
-%>

hostname: <%= @hostname %>.<%= @domain %>

resolv_conf:
  nameservers: [ '8.8.8.8', '8.8.4.4' ]
  searchdomains:
    - <%= @domain %>
  domain: <%= @domain %>
  options:
    rotate: true
    timeout: 1

write_files:
  - path: /run/public.key
    permission: 0444
    owner: root
    content: |
      <%= @public_key %>
  - path: /etc/confd/templates/hosts.cfg.tmpl
    permissions: 0444
    owner: root:root
    content: |
      # Generated by confd ----

      127.0.0.1 localhost.localdomain localhost
      ::1   localhost6.localdomain6 localhost6

      {{ range $item := gets "/hosts/*" }}
      {{ $item.Value }}    {{ $item.Key | base }}{{ end }}

  - path: /etc/confd/conf.d/hosts.toml
    permissions: 0444
    owner: root:root
    content: |
      [template]
      src   = "hosts.cfg.tmpl"
      dest  = "/etc/hosts"
      owner = "root"
      group = "root"
      mode  = "0444"
      keys  = [
        "/hosts"
      ]
  - path: /run/hosts-etc.service
    permissions: 0440
    owner: root:root
    content: |
      [Unit]
      Description=Hosts Confd Service
      Requires=etcd2.service
      After=etcd2.service

      [Service]
      Restart=on-failure
      RestartSec=5

      ExecStartPre=/bin/chmod +x /opt/bin/confd
      ExecStart=/opt/bin/confd -backend=etcd -watch=true

      [X-Fleet]
      Global=true
  - path: /etc/kubernetes/manifests/exporter.manifest
    permissions: 0444
    content: |
      #
      #   Author: Rohith
      #   Date: 2015-07-20 13:35:37 +0100 (Mon, 20 Jul 2015)
      #
      #  vim:ts=2:sw=2:et
      #
      apiVersion: v1
      kind: Pod
      metadata:
        name: <%= @hostname %>ex
        labels:
          hostname: <%= @hostname %>
          name: <%= @hostname %>ex
        annotations:
          metrics: |
            - name: exporter
              port: 9100
      spec:
        containers:
        - name: node-exporter
          image: prom/node-exporter
          ports:
          - containerPort: 9100
coreos:
  etcd2:
    <%- if @metadata['etcd_master'].nil? -%>
    proxy: on
    listen_client_urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial_cluster: <%= cluster %>
    <%- else -%>
    name: <%= @hostname %>
    advertise_client_urls: http://$private_ipv4:2379
    initial_advertise_peer_urls: http://$private_ipv4:2380
    listen_client_urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen_peer_urls: http://$private_ipv4:2380
    initial_cluster_token: k8s_etcd
    initial_cluster: <%= cluster %>
    initial_cluster_state: new
    <%- end -%>
  fleet:
    public-ip: $private_ipv4
    metadata: cluster=sbx,private_ip=$private_ipv4,host=<%= @hostname.gsub(/[0-9]*/,'') %>,<%= @metadata.map { |k,v| "#{k}=#{v}" }.join(',') %>
  flannel:
    interface: eth1
  update:
    reboot-strategy: off
  units:
    - name: etcd.service
      enable: false
    - name: etcd2.service
      command: start
      enable: true
    - name: fleet.service
      command: start
    - name: format-ephemeral.service
      command: start
      content: |
        [Unit]
        Description=Formats the ephemeral drive
        Before=docker.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/bash -c '/usr/sbin/blkid /dev/sdb || (/usr/sbin/wipefs -f /dev/sdb && /usr/sbin/mkfs.ext4 /dev/sdb -N 3000000)'
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=Mount ephemeral to /var/lib/docker
        Requires=format-ephemeral.service
        After=format-ephemeral.service
        Before=docker.service
        [Mount]
        What=/dev/sdb
        Where=/var/lib/docker
        Type=ext4
    - name: flanneld.service
      command: start
      enable: true
      drop-ins:
      - name: 50-network-config.conf
        content: |
          [Unit]
          Requires=etcd2.service
          After=etcd2.service
          [Service]
          ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network" : "10.244.0.0/16", "Backend" : { "Type" : "vxlan" } }'
          ExecStartPost=-/usr/bin/ip link delete docker0
    - name: docker.service
      command: start
      drop-ins:
        - name: flanneld-dependancy.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
            [Service]
            Environment="DOCKER_NOOP=true"
      <%- if ENV['DOCKER_MIRROR'] -%>
        - name: 51-docker-mirror.conf
          content: |
            [Service]
            Environment="DOCKER_OPTS='--registry-mirror=http://<%= ENV['DOCKER_MIRROR'] %>:5000'"
      <%- end -%>
    - name: inject-ssh-key.service
      command: start
      content: |
        [Unit]
        Description=Injecting the public key

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/bash -c "/usr/bin/cat /run/public.key >> /home/core/.ssh/authorized_keys"
    <%- if @metadata['ceph'] -%>
    - name: format-storage.service
      command: start
      content: |
        [Unit]
        Description=Formats the Storage drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/bash -c '/usr/sbin/blkid /dev/sdc || (/usr/sbin/wipefs -f /dev/sdc && /usr/sbin/mkfs.xfs /dev/sdc)'
        ExecStart=/bin/mkdir -p /var/lib/ceph
    - name: var-lib-ceph.mount
      command: start
      content: |
        [Unit]
        Description=Mount ephemeral to /var/lib/docker
        Requires=format-storage.service
        After=format-storage.service
        [Mount]
        What=/dev/sdc
        Where=/var/lib/ceph
        Type=xfs
    <%- end -%>
    - name: install-confd.service
      command: start
      content: |
        [Unit]
        Description=Install the confd binary

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=300
        ExecStartPre=/usr/bin/mkdir -p /opt/bin /etc/confd/conf.d /etc/confd/templates
        Environment="URL=https://github.com/kelseyhightower/confd/releases/download/v0.9.0/confd-0.9.0-linux-amd64"
        Environment="OUTPUT_FILE=/opt/bin/confd"
        Environment="MD5SUM=008298b40143bc71581a84d854d154a6"
        ExecStart=/usr/bin/bash -c 'until [[ -x ${OUTPUT_FILE} ]] && [[ $(md5sum ${OUTPUT_FILE} | cut -f1 -d" ") == ${MD5SUM} ]]; do wget -O ${OUTPUT_FILE} ${URL} && chmod +x ${OUTPUT_FILE}; done'
        ExecStart=/usr/bin/chmod +x ${OUTPUT_FILE}
    - name: host-presence.service
      command: start
      content: |
        [Unit]
        Description=Host Presence Container
        Requires=etcd2.service
        After=etcd2.service

        [Service]
        EnvironmentFile=/etc/environment
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=60
        ExecStart=/usr/bin/bash -c "while true; do /usr/bin/etcdctl set /hosts/%H ${COREOS_PRIVATE_IPV4} && exit 0 || sleep 2; done"
    - name: hosts-startup.service
      command: start
      content: |
        [Unit]
        Description=Hosts Service Startup
        Requires=fleet.service
        Requires=install-confd.service
        After=fleet.service
        After=install-confd.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=300
        ExecStart=/usr/bin/bash -c "while true; do /usr/bin/fleetctl start /run/hosts-etc.service && exit 0 || sleep 2; done"
    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the timezone

        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone UTC
        RemainAfterExit=yes
        Type=oneshot
    - name: ntpd.service
      command: start
    - name: install-kubernetes.service
      command: start
      content: |
        [Unit]
        Description=Install kubernetes
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=300
        Environment="URL=https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/hyperkube"
        Environment="OUTPUT_FILE=/opt/bin/hyperkube"
        Environment="MD5SUM=7ed6771de55ef14769048253bbbd8d39"
        ExecStart=/usr/bin/install -d -o root -g root -m 0700 /etc/kubernetes
        ExecStart=/usr/bin/mkdir -p /opt/bin
        ExecStart=/usr/bin/bash -c 'until [[ -x ${OUTPUT_FILE} ]] && [[ $(md5sum ${OUTPUT_FILE} | cut -f1 -d" ") == ${MD5SUM} ]]; do wget -O ${OUTPUT_FILE} ${URL} && chmod +x ${OUTPUT_FILE}; done'
        ExecStart=/usr/bin/chmod +x ${OUTPUT_FILE}
    - name: install-kubectl.service
      command: start
      content: |
        [Unit]
        Description=Install kubectl binary
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=300
        Environment="URL=https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kubectl"
        Environment="OUTPUT_FILE=/opt/bin/kubectl"
        Environment="MD5SUM=d55f69a79a01477ec8d0ab0584a91355"
        ExecStart=/usr/bin/mkdir -p /opt/bin
        ExecStart=/usr/bin/bash -c 'until [[ -x ${OUTPUT_FILE} ]] && [[ $(md5sum ${OUTPUT_FILE} | cut -f1 -d" ") == ${MD5SUM} ]]; do wget -O ${OUTPUT_FILE} ${URL} && chmod +x ${OUTPUT_FILE}; done'
        ExecStart=/usr/bin/chmod +x ${OUTPUT_FILE}
EOF

/usr/bin/chmod 0644 /var/lib/coreos-vagrant/vagrantfile-user-data
